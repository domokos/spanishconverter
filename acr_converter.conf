# This is the acr_converter configuration file
#
# It contains sections:
# - exactly one [Global] section for global parameters and
# - multiple [ACR_server] sections for each ACR server with parameters describing file download and access options
#
# Every section must be closed with an end tag in the form: [END <section_name]
#

[Global]
# The temp script file where the converter stores its generated SCP script
SCP_script_temp_file = /tmp/temp_scp_input.sh

# The temp file where the converter downloads wav and xml files for checking xml and downloading
SCP_download_temp_target_dir = /home/dmolnar/Avaya/converter/voice/

# The temp script file where the converter stores its generated SSH script for remote execution on ACR server
# to find files modified whithin the downlad window specified for each ACR server
SSH_script_temp_file = /tmp/temp_ssh_script.sh

# The path of the xml tag holding segmentatation information in the format expected by the splitting application
segmentation_tag = segmentation

# The path of the temp script file the converter will use to convert and split files to mp3 format
segmentation_script_temp_file = /tmp/temp_segmentation_script.sh

# The path of the output directory where the conversion script will put resulting files
output_directory = /home/dmolnar/Avaya/converter/mp3_files

# The path to the the splitter/converter binary
mp3slpitter_command = /home/dmolnar/git/G729split/Debug/G729Split

# As the converter is intended to be run from a cron job environment might be limited
# The below parameters can be used to spcify paths to binaries used
SSH_binary = /usr/bin/ssh
SCP_binary = /usr/bin/scp
BASH_binary = /bin/bash
RM_binary = /bin/rm

# The path to the log file where the converter will write its log output.
# Log is appended with each run so be sure to have it rotated by the os.
logfile = acr_converter.log

[END Global]

# Specify as many [ACR_server] sections as many ACR servers you want the converter to work with
# ACR server #1
[ACR_server]

# The name of the ACR server to contact
ACR_server = 192.168.100.7

# The user the converter should use to access the ACR server
# Note that the converter does not store any passwords so a secure key-based ssh authentication
# must be set up for the user specified here on the ACR server.
ACR_user = zabbix

# The directory root holding voice recordings on the ACR server normally /calls
# Note that the trailing '/' must be specified.
ACR_calls_directory_root = /calls/

# The parameter holds the number of minutes that the converter will use to check files 
# modification. Files match if their data was last modified 'ACR_call_download_window_minutes' minutes ago.
# The converter uses find's -mmin option to detect modified files.
ACR_call_download_window_minutes = 30

[END ACR_server]

# Test second ACR server section
# ACR server #2 ( this is now the same for test reasons)
[ACR_server]
ACR_server = 192.168.100.7
ACR_user = zabbix
ACR_calls_directory_root = /calls/
ACR_call_download_window_minutes = 13
[END ACR_server]

# Testing invalid section 
#[ACR_server]
#alma=korte
#[END ACR_server]


# Testing scrap
#mx;qw; kqw
# [o
# ce